---
interface Props {
	class?: string
}

const { class: className } = Astro.props
---

<div class={className}>
	<div
		class="relative flex h-12 w-7 border-spacing-8 justify-center rounded-3xl border-[3px] border-indigo-400 dark:border-violet-400"
	>
		<div
			class="absolute bottom-7 w-[6px] animate-[scrolldown-anim_2s_infinite] rounded-full bg-indigo-400 dark:bg-violet-400"
		>
		</div>
	</div>
	<div class="flex w-full flex-col items-center justify-center pt-2">
		<div
			class="down -mt-[6px] aspect-square h-[10px] rotate-45 border-b-[3px] border-r-[3px] border-indigo-400 dark:border-violet-400"
		>
		</div>
		<div
			class="down -mt-[6px] aspect-square h-[10px] rotate-45 border-b-[3px] border-r-[3px] border-indigo-400 dark:border-violet-400"
		>
		</div>
	</div>
</div>

<style>
	@keyframes scrolldown-anim {
		0% {
			opacity: 0;
			height: 6px;
		}

		40% {
			opacity: 1;
			height: 10px;
		}

		80% {
			transform: translate(0, 20px);
			height: 10px;
			opacity: 0;
		}

		100% {
			height: 3px;
			opacity: 0;
		}
	}

	.down:nth-child(odd) {
		animation: pulse 500ms ease infinite alternate;
	}

	.down:nth-child(even) {
		animation: pulse 500ms ease infinite alternate 250ms;
	}

	@keyframes pulse {
		from {
			opacity: 0;
		}

		to {
			opacity: 0.5;
		}
	}
</style>
