---
import { getLangFromUrl, useTranslations } from "@/utils/i18n"
import SendIcon from "../icons/SendIcon"
import Chip from "../text/Chip.astro"
import { Toaster } from "sonner"

const lang = getLangFromUrl(Astro.url)

const t = useTranslations(lang)
---

<article
	class="fade-in-scroll z-10 rounded-xl border border-white bg-white/20 p-4 shadow-xl outline outline-1 outline-gray-300 dark:border-white/10 dark:bg-gray-700/30 dark:shadow-none dark:outline-gray-700/20"
>
	<form action="" class="flex flex-col gap-4">
		<h2 class="font-bold">{t("contact")}</h2>
		<input
			name="email"
			type="text"
			placeholder={t("contact.email")}
			class="rounded-xl border border-white bg-white/50 px-4 py-2 outline outline-1 outline-gray-300 dark:border-white/10 dark:bg-gray-700/50 dark:outline-gray-700/20"
		/>
		<input
			name="subject"
			type="text"
			placeholder={t("contact.subject")}
			class="rounded-xl border border-white bg-white/50 px-4 py-2 outline outline-1 outline-gray-300 dark:border-white/10 dark:bg-gray-700/50 dark:outline-gray-700/20"
		/>
		<textarea
			name="message"
			placeholder={t("contact.message")}
			class="max-h-[258px] min-h-[66px] resize-none rounded-xl border border-white bg-white/50 px-4 py-2 outline outline-1 outline-gray-300 [field-sizing:content] dark:border-white/10 dark:bg-gray-700/50 dark:outline-gray-700/20"
		></textarea>
		<button
			id="submitContact"
			class="group/button mx-auto rounded-full p-px focus:outline-indigo-400 disabled:cursor-default dark:focus:outline-violet-400"
		>
			<Chip class="flex gap-2 px-2 py-1">
				<SendIcon
					className="size-4 transition-colors duration-200 group-hover/chip:text-indigo-400 group-disabled/button:text-gray-500 dark:group-hover/chip:text-violet-400"
				/>
				<span
					class="transition-colors duration-200 group-hover/chip:text-indigo-400 group-disabled/button:text-gray-500 dark:group-hover/chip:text-violet-400"
				>
					{t("contact.send")}
				</span>
			</Chip>
		</button>
	</form>
	<Toaster
		client:only="react"
		toastOptions={{
			className:
				"rounded-xl border border-white bg-white/20 p-4 text-black shadow-xl outline outline-1 outline-gray-300 dark:border-white/10 dark:bg-gray-700/30 dark:text-white dark:shadow-none dark:outline-gray-700/20 [&_svg]:text-indigo-400 dark:[&_svg]:text-violet-400",
		}}
	/>
</article>

<script>
	import { API_URL } from "@/config/environment/secrets"
	import { getLangFromUrl, useTranslations } from "@/utils/i18n"
	import axios from "axios"
	import { toast } from "sonner"

	const lang = getLangFromUrl(new URL(window.location.href))

	const t = useTranslations(lang)

	const emailRegex =
		/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/

	const button = document.querySelector(
		"button#submitContact"
	) as HTMLButtonElement

	const handleSubmit = async (event: SubmitEvent) => {
		event.preventDefault()

		const formData = new FormData(event.target as HTMLFormElement)
		const email = formData.get("email")
		const subject = formData.get("subject")
		const message = formData.get("message")

		if (!email || !subject || !message) {
			toast.error(t("toast.empty"))
			return
		} else if (!emailRegex.test(email as string)) {
			toast.error(t("toast.invalid-email"))
			return
		}
		try {
			button!.disabled = true
			await axios.post(`${API_URL}/email/send`, {
				email,
				subject,
				message,
			})
			formData.forEach((_, key) => {
				const input = document.querySelector(
					`[name="${key}"]`
				) as HTMLInputElement
				input.value = ""
			})
			toast.success(t("toast.success"))
		} catch (error) {
			toast.error(t("toast.error"))
			button!.disabled = false
		}
	}

	const form = document.querySelector("form")
	form?.addEventListener("submit", handleSubmit)
</script>
